{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pedroivo/Documents/developer/typescript-react-next/components/Weather.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nexport var Weather = function Weather(_ref) {\n  var temperature = _ref.temperature,\n      scale = _ref.scale;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"The temperature is \", temperature, \" \\xBA\", scale);\n};\n_c = Weather;\n\nfunction withWeatherProps(Component) {\n  var _this2 = this;\n\n  return function (props) {\n    return __jsx(Component, _extends({}, props, {\n      temperature: 25,\n      scale: \"C\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }));\n  };\n}\n\nexport var WrappedWeather = withWeatherProps(Weather);\n_c2 = WrappedWeather;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Weather\");\n$RefreshReg$(_c2, \"WrappedWeather\");","map":{"version":3,"sources":["/Users/pedroivo/Documents/developer/typescript-react-next/components/Weather.tsx"],"names":["React","Weather","temperature","scale","withWeatherProps","Component","props","WrappedWeather"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,IAAMC,OAAwB,GAAG,SAA3BA,OAA2B,OAA4B;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAClE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACsBD,WADtB,WACqCC,KADrC,CADF;AAKD,CANM;KAAMF,O;;AAab,SAASG,gBAAT,CAAkDC,SAAlD,EAAqF;AAAA;;AACnF,SAAO,UAACC,KAAD,EAAc;AACnB,WAAO,MAAC,SAAD,eAAeA,KAAf;AAAsB,MAAA,WAAW,EAAE,EAAnC;AAAuC,MAAA,KAAK,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD;AAGD;;AAED,OAAO,IAAMC,cAAc,GAAGH,gBAAgB,CAACH,OAAD,CAAvC;MAAMM,c","sourcesContent":["import React from 'react'\n\ninterface Props extends WeatherProps { }\n\nexport const Weather: React.FC<Props> = ({ temperature, scale }) => {\n  return (\n    <div>\n      The temperature is {temperature} ยบ{scale}\n    </div>\n  )\n}\n\ninterface WeatherProps {\n  temperature: number\n  scale: 'C' | 'F'\n}\n\nfunction withWeatherProps<P extends WeatherProps>(Component: React.ComponentType<P>) { \n  return (props: P) => {\n    return <Component {...props} temperature={25} scale={`C`} />\n  }\n}\n\nexport const WrappedWeather = withWeatherProps(Weather)"]},"metadata":{},"sourceType":"module"}