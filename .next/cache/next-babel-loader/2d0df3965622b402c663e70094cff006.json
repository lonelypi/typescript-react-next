{"ast":null,"code":"var _jsxFileName = \"/Users/pedroivo/Documents/developer/typescript-react-next/components/Weather.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nexport const Weather = ({\n  temperature,\n  scale\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, \"The temperature is \", temperature, \" \\xBA\", scale);\n};\n\nfunction withWeatherProps(Component) {\n  return props => {\n    return __jsx(Component, _extends({}, props, {\n      temperature: 25,\n      scale: `C`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }));\n  };\n}\n\nexport const WrappedWeather = withWeatherProps(Weather);\nexport const WithWeatherProps = ({\n  children\n}) => {\n  const props = {\n    temperature: 10,\n    scale: 'F'\n  };\n  return children(props);\n};","map":{"version":3,"sources":["/Users/pedroivo/Documents/developer/typescript-react-next/components/Weather.tsx"],"names":["React","Weather","temperature","scale","withWeatherProps","Component","props","WrappedWeather","WithWeatherProps","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAMA,OAAO,MAAMC,OAAwB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA4B;AAClE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACsBD,WADtB,WACqCC,KADrC,CADF;AAKD,CANM;;AAeP,SAASC,gBAAT,CAAkDC,SAAlD,EAAqF;AACnF,SAAQC,KAAD,IAAwC;AAC7C,WAAO,MAAC,SAAD,eAAeA,KAAf;AAA2B,MAAA,WAAW,EAAE,EAAxC;AAA4C,MAAA,KAAK,EAAG,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD;AAGD;;AAED,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAACH,OAAD,CAAvC;AAMP,OAAO,MAAMO,gBAA4C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5E,QAAMH,KAAmB,GAAG;AAC1BJ,IAAAA,WAAW,EAAE,EADa;AAE1BC,IAAAA,KAAK,EAAE;AAFmB,GAA5B;AAKA,SAAOM,QAAQ,CAACH,KAAD,CAAf;AACD,CAPM","sourcesContent":["import React from 'react'\n\ninterface Props extends WeatherProps {\n  theme: 'yellow' | 'green'\n}\n\nexport const Weather: React.FC<Props> = ({ temperature, scale }) => {\n  return (\n    <div>\n      The temperature is {temperature} ยบ{scale}\n    </div>\n  )\n}\n\ninterface WeatherProps {\n  temperature: number\n  scale: 'C' | 'F'\n}\n\ntype Omit<T, K extends keyof T> = Pick< T, Exclude<keyof T, K> >\n\nfunction withWeatherProps<P extends WeatherProps>(Component: React.ComponentType<P>) { \n  return (props: Omit<P, keyof WeatherProps>) => {\n    return <Component {...props as P} temperature={25} scale={`C`} />\n  }\n}\n\nexport const WrappedWeather = withWeatherProps(Weather)\n\ninterface WithWeatherProps {\n  children(props: WeatherProps): JSX.Element\n}\n\nexport const WithWeatherProps: React.FC<WithWeatherProps> = ({ children }) => {\n  const props: WeatherProps = {\n    temperature: 10,\n    scale: 'F'\n  }\n\n  return children(props)\n}"]},"metadata":{},"sourceType":"module"}