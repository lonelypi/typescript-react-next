{"ast":null,"code":"var _jsxFileName = \"/Users/pedroivo/Documents/developer/typescript-react-next/components/TasksList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTasks } from '../actions';\nexport class TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onClick\", () => {\n      const {\n        fetchTasks\n      } = this.props;\n      fetchTasks();\n    });\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.props;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, tasks.map((task, i) => {\n      return __jsx(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, task.title);\n    })), __jsx(\"button\", {\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Fetch new Task\"));\n  }\n\n}\nexport const ConnectedTasksList = connect(state => ({\n  tasks: state.tasks\n}), dispatch => ({\n  fetchTasks: () => dispatch(fetchTasks())\n}))(TaskList);","map":{"version":3,"sources":["/Users/pedroivo/Documents/developer/typescript-react-next/components/TasksList.tsx"],"names":["React","connect","fetchTasks","TaskList","Component","props","render","tasks","map","task","i","title","onClick","ConnectedTasksList","state","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAcA,OAAO,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAiD;AAAA;AAAA;;AAAA,qCAE5C,MAAM;AACd,YAAM;AAAEF,QAAAA;AAAF,UAAiB,KAAKG,KAA5B;AACAH,MAAAA,UAAU;AACX,KALqD;AAAA;;AAOtDI,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcD,IAAI,CAACE,KAAnB,CAAP;AACD,KAFA,CADH,CADF,EAME;AAAQ,MAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADF;AAUD;;AArBqD;AAwBxD,OAAO,MAAMC,kBAAkB,GAAGZ,OAAO,CAKvCa,KAAK,KAAK;AACVP,EAAAA,KAAK,EAAEO,KAAK,CAACP;AADH,CAAL,CALkC,EAOrCQ,QAAQ,KAAK;AACfb,EAAAA,UAAU,EAAE,MAAMa,QAAQ,CAACb,UAAU,EAAX;AADX,CAAL,CAP6B,CAAP,CAS9BC,QAT8B,CAA3B","sourcesContent":["import React from 'react'\nimport { Task } from '../types'\nimport { connect } from 'react-redux'\nimport { AppState } from '../reducer'\nimport { fetchTasks } from '../actions'\n\ninterface StateProps {\n  tasks: Task[]\n}\n\ninterface DispatchProps {\n  fetchTasks: () => void\n}\n\ninterface OwnProps { }\n\ninterface AllProps extends StateProps, DispatchProps, OwnProps { }\n\nexport class TaskList extends React.Component<AllProps> {\n\n  onClick = () => {\n    const { fetchTasks } = this.props\n    fetchTasks()\n  }\n\n  render() {\n\n    const { tasks } = this.props\n\n    return (\n      <div>\n        <ul>\n          {tasks.map((task, i) => {\n            return <li key={i} >{task.title}</li>\n          })}\n        </ul>\n        <button onClick={this.onClick} >Fetch new Task</button>\n      </div>\n    )\n  }\n}\n\nexport const ConnectedTasksList = connect<\n  StateProps,\n  DispatchProps,\n  OwnProps,\n  AppState\n>(state => ({\n  tasks: state.tasks\n}), dispatch => ({\n  fetchTasks: () => dispatch(fetchTasks())\n}))(TaskList)"]},"metadata":{},"sourceType":"module"}